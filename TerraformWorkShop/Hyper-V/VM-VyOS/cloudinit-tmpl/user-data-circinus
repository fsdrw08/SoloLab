#cloud-config
# https://github.com/ahpnils/lab-as-code/blob/be47a0d8aabf66b38f718de35546411eb60c879b/cloud-init/isp1router1/user-data#L4
# https://docs.vyos.io/en/stable/automation/cloud-init.html
# https://cloudinit.readthedocs.io/en/latest/reference/modules.html#disk-setup
# https://cloudinit.readthedocs.io/en/latest/reference/examples.html#disk-setup
disk_setup:
  /dev/sdb:
    table_type: gpt
    layout: True
    overwrite: False
fs_setup:
  - label: data
    filesystem: "ext4"
    device: "/dev/sdb1"
    partition: auto
    overwrite: false
# https://cloudinit.readthedocs.io/en/latest/reference/examples.html#adjust-mount-points-mounted
# https://zhuanlan.zhihu.com/p/250658106
mounts:
  - [/dev/disk/by-label/data, /mnt/data, auto, "nofail,exec"]
mount_default_fields: [None, None, "auto", "nofail", "0", "2"]

# !!! one command per line
# !!! if command ends in a value, it must be inside single quotes
# !!! a single-quote symbol is not allowed inside command or value
# to debug, refer
# https://forum.vyos.io/t/errors-when-trying-to-upgrade-a-working-configuration-from-1-2-5-to-1-3-rolling-lastest-build/5395/6
vyos_config_commands:
  # Interface
  - set interfaces ethernet eth0 address 'dhcp'
  - set interfaces ethernet eth0 description 'WAN'
  - set interfaces ethernet eth1 address '${eth1_cidr}'
  - set interfaces ethernet eth1 description '${eth1_desc}'
  - set interfaces ethernet eth2 address '${eth2_cidr}'
  - set interfaces ethernet eth2 description '${eth2_desc}'
  # Service
  # DHCP server for local network
  # https://github.com/vyos/vyos-1x/blob/ff82bd5cfd1719c31f8169309566e5c8e8d43571/src/migration-scripts/dhcp-server/9-to-10#L18
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} subnet-id '${dhcp_subnet_id}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} option default-router '${eth1_addr}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} option name-server '${eth1_addr}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} option name-server '${dhcp_name_server}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} option domain-name '${dhcp_domain_name}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} range 0 start '${dhcp_range_start}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} subnet ${int_range} range 0 stop '${dhcp_range_stop}'
  - set service dhcp-server shared-network-name ${dhcp_network_name} authoritative
  # - set service dhcp-server shared-network-name ${dhcp_network_name} ping-check https://github.com/vyos/vyos-1x/blob/ff82bd5cfd1719c31f8169309566e5c8e8d43571/src/migration-scripts/dhcp-server/7-to-8#L22
  - set service dhcp-server hostfile-update
  # - set service dhcp-server host-decl-name https://github.com/vyos/vyos-1x/blob/ff82bd5cfd1719c31f8169309566e5c8e8d43571/src/migration-scripts/dhcp-server/7-to-8#L21
  ## DNS https://docs.vyos.io/en/latest/configuration/service/dns.html
  - set service dns forwarding cache-size '0'
  - set service dns forwarding listen-address '${dns_forward_listen_addr}'
  - set service dns forwarding allow-from '${int_range}'
  - set service dns forwarding name-server '${dns_forward_1}'
  - set service dns forwarding name-server '${dns_forward_2}'
  ## ssh
  - set service ssh port '22'
  ## import ca and cert for vyos api
  - set pki ca sololab certificate '${ca_cert}'
  - set pki certificate vyos certificate '${vyos_cert}'
  - set pki certificate vyos private key '${vyos_key}'
  ## config vyos api
  - set service https certificates ca-certificate 'sololab'
  - set service https certificates certificate 'vyos'
  - set service https listen-address '${api_listen_addr}'
  - set service https port '${api_listen_port}'
  - set service https api keys id ${api_key_id} key '${api_key_content}'
  - set service https api rest
  ## dns record for vyos api
  - set system static-host-mapping host-name ${dns_api_fqdn} inet '${dns_api_ip}'
  ## https://docs.vyos.io/en/latest/configuration/loadbalancing/haproxy.html#haproxy
  - set load-balancing haproxy service http port '80'
  - set load-balancing haproxy service http mode 'http'
  - set load-balancing haproxy service http 'redirect-http-to-https'
  - set load-balancing haproxy service tcp443 port '443'
  - set load-balancing haproxy service tcp443 mode 'tcp'
  - set load-balancing haproxy service tcp443 tcp-request inspect-delay '5000'
  # reverse proxy rule for vyos api
  - set load-balancing haproxy service tcp443 rule 10 ssl 'req-ssl-sni'
  - set load-balancing haproxy service tcp443 rule 10 domain-name '${dns_api_fqdn}'
  - set load-balancing haproxy service tcp443 rule 10 set backend 'api_vyos'
  - set load-balancing haproxy backend api_vyos balance 'round-robin'
  - set load-balancing haproxy backend api_vyos mode 'tcp'
  - set load-balancing haproxy backend api_vyos server vyos address '${api_listen_addr}'
  - set load-balancing haproxy backend api_vyos server vyos port '${api_listen_port}'
  # System
  # hostname
  - set system host-name '${local_hostname}'
  # auth config
  - set system login user vyos authentication plaintext-password 'vyos'
  - set system login user vyos authentication public-keys vagrant key '${user_ssh_key}'
  - set system login user vyos authentication public-keys vagrant type 'ssh-rsa'
  # name server
  - set system name-server '${eth1_addr}'
  # ntp
  - set system ntp server '${ntp_server}'
  # timezone
  - set system time-zone '${time_zone}'
  # fix /dev/ttyS0: not a tty https://forum.vyos.io/t/dev-ttys0-not-a-tty/9642
  - delete system console device 'ttyS0'

write_files:
  - path: /tmp/finalConfig.sh
    owner: root:vyattacfg
    permissions: "0775"
    content: |
      #!/bin/vbash
      # Ensure that we have the correct group or we'll corrupt the configuration
      if [ "$(id -g -n)" != 'vyattacfg' ] ; then
          exec sg vyattacfg -c "/bin/vbash $(readlink -f $0) $@"
      fi

      source /opt/vyatta/etc/functions/script-template
      configure

      # https://minbx.com/tipslab/27/
      # https://forum.tinyserve.com/d/6-build-a-gateway-dns-server-with-v2ray-on-vyos-to-across-gfw
      set nat destination rule 10 description 'CLASH FORWARD'
      set nat destination rule 10 inbound-interface name 'eth1'
      set nat destination rule 10 protocol 'tcp_udp'
      set nat destination rule 10 destination port '80,443'
      set nat destination rule 10 source address '${int_range}'
      set nat destination rule 10 translation address '${eth1_addr}'
      set nat destination rule 10 translation port '7892'


      commit
      save
  - path: /usr/local/share/ca-certificates/sololab.crt
    owner: root:root
    permissions: "0644"
    content: |
      ${indent(6, root_ca)}

power_state:
  delay: now
  mode: reboot
  message: reboot
  timeout: 2
  condition: true
