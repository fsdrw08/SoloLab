# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: 1.5.0

# https://github.com/lancehampton/nomad-on-coreos/blob/main/coreos/ignition/consul.yaml
storage:
  directories:
    # consul config dir
    - path: /var/home/podmgr/consul-services
      mode: 0700
      user:
        id: 1001
      group:
        id: 1001
    - path: /var/home/podmgr/.local/etc/consul.d
      mode: 0700
      user:
        id: 1001
      group:
        id: 1001
    # consul data dir
    - path: /var/home/podmgr/.local/opt/consul
      mode: 0700
      user:
        id: 1001
      group:
        id: 1001
  files:
    - path: /opt/bin/consul_${consul_version}_linux_amd64.zip
      mode: 0644
      contents:
        source: ${consul_download_url}
    - path: /var/home/podmgr/.local/etc/consul.d/ca.crt
      overwrite: true
      user:
        id: 1001
      group:
        id: 1001
      mode: 0600
      contents:
        source: ${ca_cert_url}
    - path: /var/home/podmgr/.local/etc/consul.d/consul.hcl
      overwrite: true
      user:
        id: 1001
      group:
        id: 1001
      contents:
        inline: |
          acl {
            tokens {
              default = "${consul_acl_token}"
            }
          }
          bind_addr = "0.0.0.0"
          client_addr = "{{ GetInterfaceIP \"eth0\" }}"
          data_dir = "/var/home/podmgr/.local/opt/consul"
          encrypt = "${consul_encrypt_key}"
          ports {
            https = 8501
          }
          retry_join = ["${consul_server_fqdn}"]
          tls {
            defaults {
              ca_file = "/var/home/podmgr/.local/etc/consul.d/ca.crt"
              verify_incoming = false
              verify_outgoing = true
              verify_server_hostname = true
            }
            internal_rpc {
              verify_server_hostname = true
            }
          }
          auto_encrypt {
            tls = true
          }
    - path: /var/home/podmgr/.config/systemd/user/consul.service
      overwrite: true
      user:
        id: 1001
      group:
        id: 1001
      contents:
        inline: |
          [Unit]
          Description="HashiCorp Consul - A service mesh solution"
          Documentation=https://developer.hashicorp.com/
          Wants=podman-user-wait-network-online.service
          After=podman-user-wait-network-online.service
          ConditionFileNotEmpty=/opt/bin/consul
          ConditionFileNotEmpty=/var/home/podmgr/.local/etc/consul.d/consul.hcl
          ConditionPathIsDirectory=/var/home/podmgr/.local/opt/consul

          [Service]
          ExecStart=/opt/bin/consul agent \
            -config-dir=/var/home/podmgr/.local/etc/consul.d \
            -config-dir=/var/home/podmgr/consul-services
          ExecReload=/bin/kill --signal HUP $MAINPID
          KillMode=process
          KillSignal=SIGTERM
          Restart=on-failure
          LimitNOFILE=65536

          [Install]
          WantedBy=default.target
  links:
    # link the service under default.target.wants for auto start when user login
    - path: /var/home/podmgr/.config/systemd/user/default.target.wants/consul.service
      target: /var/home/podmgr/.config/systemd/user/consul.service
      overwrite: true
      user:
        id: 1001
      group:
        id: 1001
systemd:
  units:
    - name: prepare-consul-binary.service
      enabled: true
      contents: |
        [Unit]
        Description=Unpack Consul binary to /opt/bin
        ConditionPathExists=!/opt/bin/consul

        [Service]
        Type=oneshot
        Restart=on-failure
        RemainAfterExit=yes
        Environment=consul_version=${consul_version}
        ExecStart=/usr/bin/bsdtar -xf "/opt/bin/consul_${consul_version}_linux_amd64.zip" -C /opt/bin
        ExecStart=/usr/bin/rm "/opt/bin/consul_${consul_version}_linux_amd64.zip"
        ExecStart=/usr/bin/chmod +x /opt/bin/consul
        # Fix SELinux contexts for systemd execution
        ExecStart=/usr/bin/chcon -t bin_t /opt/bin/consul

        [Install]
        WantedBy=multi-user.target
