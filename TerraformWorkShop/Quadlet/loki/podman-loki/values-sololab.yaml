global:
  imageRegistry: zot.day0.sololab
loki:
  containerPorts: []
  config:
    ## loki cannot handle tls well by itself,
    ## reason: failed to run local healthcheck if tls configed
    ## error message: tls: invalid ClientKeyExchange message
    # server:
    #   http_tls_config:
    #     # https://pkg.go.dev/crypto/tls#ClientAuthType
    #     client_auth_type: VerifyClientCertIfGiven
    #     client_ca_file: /etc/loki/certs/ca.crt
    #     cert_file: /etc/loki/certs/loki.crt
    #     key_file: /etc/loki/certs/loki.key
    ui:
      enabled: true
      node_name: day1

  # tls:
  #   mountPath: /etc/loki/certs
  #   contents:
  #     loki.crt: # set from terraform data
  #     loki.key: # set from terraform data
  podLabels:
    traefik.enable: true
    traefik.http.routers.loki-redirect.entrypoints: web
    traefik.http.routers.loki-redirect.rule: Host(`loki.day1.sololab`)
    traefik.http.routers.loki-redirect.middlewares: toHttps@docker
    traefik.http.routers.loki.entryPoints: webSecure
    traefik.http.routers.loki.rule: Host(`loki.day1.sololab`)
    traefik.http.routers.loki.tls.certresolver: internal
    traefik.http.services.loki.loadbalancer.server.port: 3100
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
