global:
  imageRegistry: zot.day0.sololab
grafana:
  containerPorts: []
  livenessProbe:
    enabled: true
    initialDelaySeconds: 3
    periodSeconds: 600
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    exec:
      command:
        - curl
        - -kf
        - https://localhost:3000/api/health
  configFiles:
    custom:
      server:
        domain: grafana.day1.sololab
        root_url: https://grafana.day1.sololab
        cert_key: /etc/grafana/certs/grafana.key
        cert_file: /etc/grafana/certs/grafana.crt
        protocol: https
      auth.generic_oauth:
        enabled: true
        name: vault
        client_id: # set from terraform data
        client_secret: # set from terraform data
        auth_url: # set from terraform data
        api_url: # set from terraform data
        token_url: # set from terraform data
        scopes: openid groups user
        email_attribute_path: email
        empty_scopes: false
        tls_client_ca: /etc/grafana/certs/ca.crt
        # Configure role mapping, oss version grafana only able to use serval builtin roles
        # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/generic-oauth/#configure-role-mapping
        # https://github.com/ruby-no-kai/rubykaigi-net/blob/29080e7758903dd7429fbdc60eb5f1ddd4b6a2ed/tf/grafana/oidc_client.tf#L17
        # https://github.com/Lillecarl/nixos/blob/0cd25a6656976b10b9caf49b4dd637d91b5245f5/cloud/grafana-config/oauth.tf#L17
        #
        # available roles: Viewer, Editor, Admin and GrafanaAdmin
        # login with GrafanaAdmin need to set below attribute to true
        # GrafanaAdmin means Organization administrator
        # ref: https://community.grafana.com/t/generic-oauth-cannot-assign-grafanaadmin/110312/2
        # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/generic-oauth/#configuration-options:~:text=mapping%20example.-,allow_assign_grafana_admin,-No
        allow_assign_grafana_admin: true
        # ref: https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/#roles-and-permissions
        role_attribute_path: contains(groups[*], 'app-grafana-root') && 'GrafanaAdmin' || contains(groups[*], 'app-grafana-admin') && 'Admin' || contains(roles[*], 'app-grafana-editor') && 'Editor' || 'Viewer'
  podLabels:
    traefik.enable: true
    traefik.http.routers.grafana-redirect.entrypoints: web
    traefik.http.routers.grafana-redirect.rule: Host(`grafana.day1.sololab`)
    traefik.http.routers.grafana-redirect.middlewares: toHttps@file
    traefik.http.routers.grafana-redirect.service: grafana

    traefik.http.routers.grafana.entrypoints: webSecure
    traefik.http.routers.grafana.rule: Host(`grafana.day1.sololab`)
    traefik.http.routers.grafana.tls: true
    traefik.http.routers.grafana.service: grafana

    traefik.http.services.grafana.loadBalancer.serversTransport: grafana@file
    traefik.http.services.grafana.loadbalancer.server.scheme: https
    traefik.http.services.grafana.loadbalancer.server.port: 3000

    # traefik.tcp.routers.grafana.entrypoints: webSecure
    # traefik.tcp.routers.grafana.rule: HostSNI(`grafana.day1.sololab`)
    # traefik.tcp.routers.grafana.tls.passthrough: true
    # traefik.tcp.routers.grafana.service: grafana
    # traefik.tcp.services.grafana.loadbalancer.server.port: 3000
  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
