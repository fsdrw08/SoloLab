zot:
  image:
    registry: quay.io
    repository: giantswarm/zot
  containerPorts: []
  resourcesPreset: medium
  podRestartPolicy: OnFailure
  config:
    # https://zotregistry.dev/v2.1.5/admin-guide/admin-configuration/#extensions
    extensions:
      # https://zotregistry.dev/v2.1.5/admin-guide/admin-configuration/#enhanced-searching-and-querying-images
      search:
        enable: true
        cve:
          updateInterval: "168h"
          # https://github.com/project-zot/zot/issues/2298#issuecomment-1978312708
          trivy:
            javadbrepository: "zot.day0.sololab:5000/aquasecurity/trivy-java-db" # ghcr.io/aquasecurity/trivy-java-db
            dbrepository: "zot.day0.sololab:5000/aquasecurity/trivy-db" # ghcr.io/aquasecurity/trivy-db
      # Mgmt is enabled when the Search extension is enabled
      mgmt:
        enable: true
      ui:
        enable: true
      scrub:
        enable: true
        interval: "24h"
      metrics:
        enable: true
        prometheus:
          path: /metrics
    # Network configuration
    # https://zotregistry.dev/v2.1.5/admin-guide/admin-configuration/#network-configuration
    http:
      address: "192.168.255.10"
      port: "5000"
      realm: "zot"
      tls:
        cert: "/etc/zot/certs/server.crt"
        key: "/etc/zot/certs/server.key"
        cacert: "/etc/zot/certs/ca.crt"
      # https://zotregistry.dev/v2.1.5/admin-guide/admin-configuration/#authentication
      auth:
        # https://zotregistry.dev/v2.1.5/articles/authn-authz/#htpasswd
        htpasswd:
          path: /etc/zot/htpasswd
        failDelay: 5
      # https://zotregistry.dev/v2.0.4/articles/authn-authz/#example-access-control-configuration
      accessControl:
        repositories:
          "**":
            defaultPolicy: ["read"]
            # https://github.com/project-zot/zot/blob/main/examples/README.md#identity-based-authorization
            anonymousPolicy: ["read"]
        adminPolicy:
          users: ["admin"]
          actions: ["read", "create", "update", "delete"]

    # https://zotregistry.dev/v2.0.4/articles/storage/#configuring-zot-storage
    storage:
      rootDirectory: "/var/lib/registry"
      # https://zotregistry.dev/v2.0.4/articles/storage/#commit
      # make data to be written to disk immediately
      commit: true
      # https://zotregistry.dev/v2.0.4/articles/storage/#garbage-collection
      # Garbage collection (gc) is enabled by default to reclaim this space
      gc: true
    log:
      level: "info"
  htpasswd: |
    admin:$2y$05$S94dvsnxtN2tTONk8eTGEuABGfzDAcXXqkWbIg62mHyOe71PWRRGa
  podLabels:
    traefik.enable: true
    traefik.http.routers.zot-redirect.entrypoints: web
    traefik.http.routers.zot-redirect.rule: Host(`zot.day0.sololab`)
    traefik.http.routers.zot-redirect.middlewares: toHttps@file
    traefik.http.routers.zot-redirect.service: zot

    traefik.http.routers.zot.entrypoints: webSecure
    traefik.http.routers.zot.rule: Host(`zot.day0.sololab`)
    traefik.http.routers.zot.tls: true
    traefik.http.routers.zot.service: zot

    traefik.http.services.zot.loadBalancer.serversTransport: zot@file
    traefik.http.services.zot.loadbalancer.server.scheme: https
    traefik.http.services.zot.loadbalancer.server.port: 5000
    traefik.http.services.zot.loadbalancer.healthCheck.path: /v2/

    # traefik.tcp.routers.zot-web.entrypoints: webSecure
    # traefik.tcp.routers.zot-web.rule: HostSNI(`zot.day0.sololab`)
    # traefik.tcp.routers.zot-web.tls.passthrough: true
    # traefik.tcp.routers.zot-web.service: zot-web
    # traefik.tcp.services.zot-web.loadbalancer.server.port: 5000

  extraEnvVars:
    - name: TZ
      value: Asia/Shanghai
    # https://github.com/project-zot/zot/issues/2298
    # https://github.com/aquasecurity/trivy/issues/4169
    # https://github.com/aquasecurity/trivy/discussions/4194
    - name: SSL_CERT_DIR
      value: /etc/zot/certs
