[Unit]
Description="${Description}"
Documentation="${Documentation}"
After=http.socket https.socket
Requires=http.socket https.socket

[Service]
Sockets=http.socket https.socket
ExecStartPre=bash -c "podman secret exists traefik-sec-ca && podman secret rm traefik-sec-ca; echo \"${ca}\" | base64 -d | podman secret create traefik-sec-ca -"

# https://docs.podman.io/en/latest/markdown/podman-systemd.unit.5.html#container-units-container
[Container]
ContainerName=traefik

Image=zot.day0.sololab:5000/library/traefik:v3.3.4

SecurityLabelType=spc_t

PublishPort=8080:8080

# https://doc.traefik.io/traefik/reference/static-configuration/cli/
Exec=--accessLog=true \
  --api=true \
  --api.dashboard=true \
  --entrypoints.web.address=:80 \
  --entrypoints.web.forwardedHeaders.trustedIPs=0.0.0.0/0 \
  --entrypoints.webSecure.address=:443 \
  --entrypoints.webSecure.forwardedHeaders.trustedIPs=0.0.0.0/0 \
  --global.checkNewVersion=false \
  --global.sendAnonymousUsage=false \
  --log.level=INFO \
  --ping=true \
  --providers.docker=true \
  --providers.docker.endpoint=unix:///var/run/docker.sock \
  --providers.docker.exposedByDefault=false \
  --providers.file=true \
  --providers.file.directory=/etc/traefik/dynamic \
  --serversTransport.insecureSkipVerify=false \
  --serversTransport.rootCAs=/etc/traefik/tls/ca.crt

Environment=TZ=Asia/Shanghai
Environment=LEGO_CA_CERTIFICATES=/etc/traefik/tls/ca.crt
Environment=LEGO_CA_SYSTEM_CERT_POOL=true

Secret=source=traefik-sec-ca,target=/etc/traefik/tls/ca.crt

Volume=%t/podman/podman.sock:/var/run/docker.sock
Volume=traefik-pvc-dynamic:/etc/traefik/dynamic
Volume=traefik-pvc-tls:/etc/traefik/certs

Label="traefik.enable=true"
Label="traefik.http.middlewares.userPass.basicauth.users=admin:$apr1$/F5ai.wT$7nFJWh4F7ZA0qoY.JZ69l1"
Label="traefik.http.routers.dashboard-redirect.entrypoints=web"
Label="traefik.http.middlewares.toHttps.redirectscheme.scheme=https"
Label="traefik.http.middlewares.toHttps.redirectscheme.permanent=true"
Label="traefik.http.routers.dashboard-redirect.middlewares=toHttps@docker"
Label="traefik.http.routers.dashboard-redirect.middlewares=toHttps@docker"
Label="traefik.http.routers.dashboard-redirect.middlewares=toHttps@docker"
Label="traefik.http.routers.dashboard-redirect.rule=Host(`traefik.day0.sololab`) && (PathPrefix(`/api`)|| PathPrefix(`/dashboard`))"
Label="traefik.http.routers.dashboard.entryPoints=webSecure"
Label="traefik.http.routers.dashboard.middlewares=userPass@docker"
Label="traefik.http.routers.dashboard.rule=Host(`traefik.day0.sololab`) && (PathPrefix(`/api`)|| PathPrefix(`/dashboard`))"
Label="traefik.http.routers.dashboard.service=api@internal"
Label="traefik.http.routers.dashboard.tls=true"

SecurityLabelDisable=true

# health check requires traefik enable ping function, this function disable by default
# traefik ping function requires a entry point name "traefik", port 8080 by default
# with podman systemd socket activation, we do not need to listen 8080 by socket
# just leave 8080 empty
HealthCmd=["traefik", "healthcheck", "--ping"]
HealthStartPeriod=10s
HealthInterval=600s
HealthTimeout=30s
HealthRetries=10
# Notify=healthy

PodmanArgs=${PodmanArgs}
Network=${Network}
[Install]
WantedBy=default.target