global:
  imageRegistry: zot.day0.sololab
prometheus:
  # hostAliases:
  #   - ip: host-gateway
  #     hostnames:
  #       - day1.node.consul
  podLabels:
    traefik.enable: true
    traefik.http.routers.prometheus-redirect.entrypoints: web
    traefik.http.routers.prometheus-redirect.rule: Host(`prometheus.day1.sololab`)
    traefik.http.routers.prometheus-redirect.middlewares: toHttps@file
    traefik.http.routers.prometheus-redirect.service: prometheus

    traefik.http.routers.prometheus.entryPoints: webSecure
    traefik.http.routers.prometheus.rule: Host(`prometheus.day1.sololab`)
    traefik.http.routers.prometheus.tls: true
    traefik.http.routers.prometheus.service: prometheus

    traefik.http.services.prometheus.loadBalancer.serversTransport: prometheus@file
    traefik.http.services.prometheus.loadbalancer.server.scheme: https
    traefik.http.services.prometheus.loadbalancer.server.port: 9090

    traefik.http.routers.prometheus-blackbox-exporter-redirect.entrypoints: web
    traefik.http.routers.prometheus-blackbox-exporter-redirect.rule: Host(`prometheus-blackbox-exporter.day1.sololab`)
    traefik.http.routers.prometheus-blackbox-exporter-redirect.middlewares: toHttps@file
    traefik.http.routers.prometheus-blackbox-exporter-redirect.service: prometheus-blackbox-exporter

    traefik.http.routers.prometheus-blackbox-exporter.entryPoints: webSecure
    traefik.http.routers.prometheus-blackbox-exporter.rule: Host(`prometheus-blackbox-exporter.day1.sololab`)
    traefik.http.routers.prometheus-blackbox-exporter.tls: true
    traefik.http.routers.prometheus-blackbox-exporter.service: prometheus-blackbox-exporter

    traefik.http.services.prometheus-blackbox-exporter.loadBalancer.serversTransport: prometheus-blackbox-exporter@file
    traefik.http.services.prometheus-blackbox-exporter.loadbalancer.server.scheme: https
    traefik.http.services.prometheus-blackbox-exporter.loadbalancer.server.port: 9115
  # adopt bitnami image user id
  podAnnotations:
    io.podman.annotations.userns: keep-id:uid=1001,gid=1001
  containers:
    server:
      enabled: true
      image:
        repository: bitnami/prometheus
        tag: 3.4.1
      containerPorts: []
      livenessProbe:
        exec:
          command:
            - sh
            - -c
            - |
              curl -s -k https://localhost:9090/-/healthy
      resourcesPreset: "small"
      # adopt bitnami image user id
      # https://github.com/bitnami/containers/blob/main/bitnami/prometheus/3/debian-12/Dockerfile
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: false
      configFiles:
        main:
          scrape_configs:
            ## Here it's Prometheus itself.
            ## The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
            - job_name: prometheus
              metrics_path: /metrics # defaults to '/metrics'
              scheme: https # defaults to 'http'.
              tls_config:
                ca_file: /etc/prometheus/certs/ca.crt
                server_name: prometheus.day1.sololab
              static_configs:
                - targets: ["localhost:9090"]
                  # The label name is added as a label `label_name=<label_value>` to any timeseries scraped from this config.
                  labels:
                    app: "prometheus"
            # need to add correct relabel config
            - job_name: consul_sd
              consul_sd_configs:
                - server: consul.day0.sololab
                  datacenter: dc1
                  scheme: https
                  tls_config:
                    ca_file: /etc/prometheus/certs/ca.crt
              relabel_configs:
                - source_labels: ["__meta_consul_tags"]
                  regex: .*exporter.*
                  action: keep
        ## @param prometheus.configFiles.web basic authentication and TLS config
        ## The config file will presents in the path which specify in prometheus.flags.web.config.file, default: /etc/prometheus/web.yml
        ## ref: https://prometheus.io/docs/prometheus/3.4/configuration/https/
        ##
        web:
          tls_server_config:
            cert_file: /etc/prometheus/certs/prometheus.crt
            key_file: /etc/prometheus/certs/prometheus.key
      # https://prometheus.io/docs/prometheus/3.4/command-line/prometheus/
      flags:
        web:
          config:
            file: /etc/prometheus/server_web.yml
            # listen-address: 127.0.0.1:9090
          enable-remote-write-receiver: true
      extraEnvVars:
        - name: TZ
          value: Asia/Shanghai
    blackboxExporter:
      image:
        repository: bitnami/blackbox-exporter
        tag: 0.26.0
      containerPorts: []
      livenessProbe:
        enabled: false
      configFiles:
        web:
          tls_server_config:
            cert_file: /etc/blackbox_exporter/certs/blackboxExporter.crt
            key_file: /etc/blackbox_exporter/certs/blackboxExporter.key
      flags:
        web:
          config:
            file: /etc/blackbox_exporter/blackbox_exporter_web.yml
