global:
  imageRegistry: zot.day0.sololab
prometheus:
  # hostAliases:
  #   - ip: host-gateway
  #     hostnames:
  #       - day1.node.consul
  podLabels:
    traefik.enable: true
    traefik.http.routers.prometheus-redirect.entrypoints: web
    traefik.http.routers.prometheus-redirect.rule: Host(`prometheus.day1.sololab`)
    traefik.http.routers.prometheus-redirect.middlewares: toHttps@file
    traefik.http.routers.prometheus-redirect.service: prometheus

    traefik.http.routers.prometheus.entryPoints: webSecure
    traefik.http.routers.prometheus.rule: Host(`prometheus.day1.sololab`)
    traefik.http.routers.prometheus.tls: true
    traefik.http.routers.prometheus.service: prometheus

    traefik.http.services.prometheus.loadBalancer.serversTransport: prometheus@file
    traefik.http.services.prometheus.loadbalancer.server.scheme: https
    traefik.http.services.prometheus.loadbalancer.server.port: 9090

    traefik.http.routers.prometheus-blackbox-exporter-redirect.entrypoints: web
    traefik.http.routers.prometheus-blackbox-exporter-redirect.rule: Host(`prometheus-blackbox-exporter.day1.sololab`)
    traefik.http.routers.prometheus-blackbox-exporter-redirect.middlewares: toHttps@file
    traefik.http.routers.prometheus-blackbox-exporter-redirect.service: prometheus-blackbox-exporter

    traefik.http.routers.prometheus-blackbox-exporter.entryPoints: webSecure
    traefik.http.routers.prometheus-blackbox-exporter.rule: Host(`prometheus-blackbox-exporter.day1.sololab`)
    traefik.http.routers.prometheus-blackbox-exporter.tls: true
    traefik.http.routers.prometheus-blackbox-exporter.service: prometheus-blackbox-exporter

    traefik.http.services.prometheus-blackbox-exporter.loadBalancer.serversTransport: prometheus-blackbox-exporter@file
    traefik.http.services.prometheus-blackbox-exporter.loadbalancer.server.scheme: https
    traefik.http.services.prometheus-blackbox-exporter.loadbalancer.server.port: 9115
  # adopt bitnami image user id
  podAnnotations:
    io.podman.annotations.userns: keep-id:uid=1001,gid=1001
  containers:
    server:
      enabled: true
      image:
        repository: bitnami/prometheus
        tag: 3.4.1
      containerPorts: []
      livenessProbe:
        exec:
          command:
            - sh
            - -c
            - |
              curl -s -k https://localhost:9090/-/healthy
      resourcesPreset: "small"
      # adopt bitnami image user id
      # https://github.com/bitnami/containers/blob/main/bitnami/prometheus/3/debian-12/Dockerfile
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        readOnlyRootFilesystem: false
      configFiles:
        main:
          scrape_configs:
            - job_name: blackbox_exporter
              scrape_interval: 15s
              scrape_timeout: 5s
              metrics_path: /probe
              tls_config:
                ca_file: /etc/prometheus/certs/ca.crt
                server_name: prometheus.day1.sololab
              params:
                module: [http_2xx]
              consul_sd_configs:
                - server: consul.day1.sololab
                  datacenter: dc1
                  scheme: https
                  tls_config:
                    ca_file: /etc/prometheus/certs/ca.crt
              # https://github.com/unixhot/opsany-paas/blob/ea905341cd02a8562883a8a0dc05f2db812b94aa/install/conf/prometheus/prometheus.yml#L92C7-L97C31
              relabel_configs:
                - source_labels: ["__meta_consul_service_metadata_address"]
                  regex: ".+"
                  action: keep
                # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#consul_sd_config
                # https://github.com/spirkaa/infra/blob/fa0fcce1e2e764d911f58c621cb81c9065e1ad41/cluster/observability/kube-prometheus-stack/kps/values.yaml#L163
                - source_labels:
                    - __meta_consul_service_metadata_scheme
                    - __meta_consul_service_metadata_address
                    - __meta_consul_service_port
                    - __meta_consul_service_metadata_health_check_path
                  regex: (.+);(.+);(.+);(.*)
                  replacement: ${1}://${2}:${3}/${4}
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                # blackbox exporter config
                - target_label: __scheme__
                  replacement: https
                - target_label: __address__
                  replacement: prometheus-blackbox-exporter.day1.sololab
            - job_name: general_exporter_consul_sd
              tls_config:
                insecure_skip_verify: true
              consul_sd_configs:
                - server: consul.day1.sololab
                  datacenter: dc1
                  scheme: https
                  tls_config:
                    ca_file: /etc/prometheus/certs/ca.crt
              relabel_configs:
                - source_labels: ["__meta_consul_tags"]
                  regex: .*,exporter,.*
                  action: keep
                - source_labels: ["__meta_consul_service_metadata_scheme"]
                  target_label: __scheme__
                - source_labels:
                    - __meta_consul_service_metadata_address
                    - __meta_consul_service_port
                  regex: (.+);(.+)
                  replacement: ${1}:${2}
                  target_label: __address__
                - source_labels: ["__meta_consul_service_metadata_metrics_path"]
                  target_label: __metrics_path__
                # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                - action: labelmap
                  regex: __meta_consul_service_metadata_metrics_path_param_(.+)
                  replacement: __param_$1
            - job_name: vault_exporter
              tls_config:
                ca_file: /etc/prometheus/certs/ca.crt
              authorization:
                credentials_file: /etc/prometheus/certs/vault-token
              consul_sd_configs:
                - server: consul.day1.sololab
                  datacenter: dc1
                  scheme: https
                  tls_config:
                    ca_file: /etc/prometheus/certs/ca.crt
                  services:
                    - vault
              relabel_configs:
                - source_labels: ["__meta_consul_tags"]
                  regex: .*vault-exporter.*
                  action: keep
                - source_labels: ["__meta_consul_service_metadata_scheme"]
                  target_label: __scheme__
                - source_labels:
                    - __meta_consul_service_metadata_address
                    - __meta_consul_service_port
                  regex: (.+);(.+)
                  replacement: ${1}:${2}
                  target_label: __address__
                - source_labels: ["__meta_consul_service_metadata_metrics_path"]
                  target_label: __metrics_path__
                - action: labelmap
                  regex: __meta_consul_service_metadata_metrics_path_param_(.+)
                  replacement: __param_$1
            - job_name: consul_exporter
              tls_config:
                ca_file: /etc/prometheus/certs/ca.crt
              http_headers:
                X-Consul-Token:
                  files:
                    - /etc/prometheus/certs/consul-token
              consul_sd_configs:
                - server: consul.day1.sololab
                  datacenter: dc1
                  scheme: https
                  tls_config:
                    ca_file: /etc/prometheus/certs/ca.crt
                  services:
                    - consul
              relabel_configs:
                - source_labels: ["__meta_consul_tags"]
                  regex: .*consul-exporter.*
                  action: keep
                - source_labels: ["__meta_consul_service_metadata_scheme"]
                  target_label: __scheme__
                - source_labels:
                    - __meta_consul_service_metadata_address
                    - __meta_consul_service_port
                  regex: (.+);(.+)
                  replacement: ${1}:${2}
                  target_label: __address__
                - source_labels: ["__meta_consul_service_metadata_metrics_path"]
                  target_label: __metrics_path__
                - action: labelmap
                  regex: __meta_consul_service_metadata_metrics_path_param_(.+)
                  replacement: __param_$1
        ## @param prometheus.configFiles.web basic authentication and TLS config
        ## The config file will presents in the path which specify in prometheus.flags.web.config.file, default: /etc/prometheus/web.yml
        ## ref: https://prometheus.io/docs/prometheus/3.4/configuration/https/
        ##
        web:
          tls_server_config:
            cert_file: /etc/prometheus/certs/prometheus.crt
            key_file: /etc/prometheus/certs/prometheus.key
      # https://prometheus.io/docs/prometheus/3.4/command-line/prometheus/
      flags:
        web:
          config:
            file: /etc/prometheus/server_web.yml
            # listen-address: 127.0.0.1:9090
          enable-remote-write-receiver: true
      extraEnvVars:
        - name: TZ
          value: Asia/Shanghai
    blackboxExporter:
      image:
        repository: bitnami/blackbox-exporter
        tag: 0.26.0
      containerPorts: []
      livenessProbe:
        enabled: false
      configFiles:
        main:
          modules:
            http_2xx:
              prober: http
              timeout: 5s
              http:
                valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
                follow_redirects: true
                preferred_ip_protocol: "ip4"
                tls_config:
                  insecure_skip_verify: true
        web:
          tls_server_config:
            cert_file: /etc/blackbox_exporter/certs/blackboxExporter.crt
            key_file: /etc/blackbox_exporter/certs/blackboxExporter.key
      flags:
        web:
          config:
            file: /etc/blackbox_exporter/blackbox_exporter_web.yml
